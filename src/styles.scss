// VARIABLES
// Brand Colors
$liquibase-blue: #2962ff;
$liquibase-light-blue: #bbdefb;
$liquibase-dark-blue: #283593;
$liquibase-red: #ff1744;
$liquibase-teal: #00e5ff;
$liquibase-green: #00bfa5;
$liquibase-green: #ffca28;
$liquibase-black: #0e0033;
$liquibase-gray-4: #404059;
$liquibase-gray-3: #75788a;
$liquibase-gray-2: #c4c4cc;
$liquibase-gray-1: #f2f2f2;
$liquibase-white: #ffffff;


// THEME
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

// 3P Library for Programmatically Creating Mat-Palettes from a Base Color
@import '~mdp-sass/mdp-sass';

$ui-primary: mat-palette(get-mat-palette($liquibase-blue, true));
$ui-accent: mat-palette(get-mat-palette($liquibase-teal));

// The warn palette is optional (defaults to red).
$ui-warn: mat-palette(get-mat-palette($liquibase-red));

// Create the theme object (a Sass map containing all of the palettes).
$ui-theme: mat-light-theme($ui-primary, $ui-accent, $ui-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($ui-theme);

// Define an alternate dark theme.
$dark-primary: mat-palette(get-mat-palette($liquibase-blue, true));
$dark-accent: mat-palette(get-mat-palette($liquibase-teal));
$dark-warn: mat-palette(get-mat-palette($liquibase-red));
$dark-theme: mat-dark-theme($dark-primary, $dark-accent, $dark-warn);

// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.dark-mode` will be affected by this alternate dark theme instead of the default theme.
.dark-mode {
  @include angular-material-theme($dark-theme);
}


// GLOBALS
/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
